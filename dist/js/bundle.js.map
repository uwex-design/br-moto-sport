{"version":3,"sources":["libs.js","common.js","dropdown-desktop.js","dropdown-mobile.js"],"names":["window","BRMotoSport","debounce","func","wait","let","timeout","args","clearTimeout","setTimeout","throttle","limit","inThrottle","arguments","apply","this","lazyLoad","images","document","querySelectorAll","imageObserver","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","img","target","src","dataset","classList","remove","unobserve","observe","smoothScroll","element","querySelector","scrollIntoView","behavior","block","console","log","CONFIG","SELECTORS","menuToggle","mobileMenu","internalLinks","CLASSES","loaded","menuOpen","active","init","body","add","initMobileMenu","addEventListener","toggle","link","e","preventDefault","getAttribute","Swiper","slidesPerView","spaceBetween","readyState","initDropdownMenu","innerWidth","dropdownBtn","dropdownMenu","header","closeDropdown","stopPropagation","contains","matches","closest","dropdownResizeTimeout","marcaConfig","triggerClass","submenuId","name","headerConfig","headerSelector","menuToggleSelector","activeClass","headerActiveClass","setupMobileHeader","MutationObserver","mutations","mutation","type","attributeName","attributes","attributeFilter","setupMarcaDropdown","triggerLi","submenu","appendChild","removeEventListener","handleMarcaClick","currentTarget","closeMarcaDropdown","openMarcaDropdown","style","cssText","item","setAttribute"],"mappings":"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","file":"bundle.js","sourcesContent":["// BR Moto Sport - Bibliotecas e Utilitários\n// Arquivo: src/js/libs.js\n\n// Funções utilitárias globais\nwindow.BRMotoSport = window.BRMotoSport || {};\n\n// Utilitário para debounce\nBRMotoSport.debounce = function(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// Utilitário para throttle\nBRMotoSport.throttle = function(func, limit) {\n  let inThrottle;\n  return function() {\n    const args = arguments;\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};\n\n// Função para lazy loading\nBRMotoSport.lazyLoad = function() {\n  const images = document.querySelectorAll('img[data-src]');\n  \n  const imageObserver = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        const img = entry.target;\n        img.src = img.dataset.src;\n        img.classList.remove('lazy');\n        imageObserver.unobserve(img);\n      }\n    });\n  });\n\n  images.forEach(img => imageObserver.observe(img));\n};\n\n// Função para smooth scroll\nBRMotoSport.smoothScroll = function(target) {\n  const element = document.querySelector(target);\n  if (element) {\n    element.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start'\n    });\n  }\n};\n\nconsole.log('BR Moto Sport - Bibliotecas carregadas!');\n","/**\n * BR Moto Sport - Código Comum\n * Arquivo: src/js/common.js\n */\n\n(() => {\n  'use strict';\n\n  // Configurações\n  const CONFIG = {\n    SELECTORS: {\n      menuToggle: '.menu-toggle',\n      mobileMenu: '.mobile-menu',\n      internalLinks: 'a[href^=\"#\"]'\n    },\n    CLASSES: {\n      loaded: 'loaded',\n      menuOpen: 'menu-open',\n      active: 'active'\n    }\n  };\n\n  /**\n   * Inicializa lazy loading se disponível\n   */\n  function initLazyLoad() {\n    if (window.BRMotoSport?.lazyLoad) {\n      window.BRMotoSport.lazyLoad();\n    }\n  }\n\n  /**\n   * Inicializa menu mobile (se existir)\n   */\n  function initMobileMenu() {\n    const menuToggle = document.querySelector(CONFIG.SELECTORS.menuToggle);\n    const mobileMenu = document.querySelector(CONFIG.SELECTORS.mobileMenu);\n    \n    if (menuToggle && mobileMenu) {\n      menuToggle.addEventListener('click', () => {\n        mobileMenu.classList.toggle(CONFIG.CLASSES.active);\n        menuToggle.classList.toggle(CONFIG.CLASSES.active);\n        document.body.classList.toggle(CONFIG.CLASSES.menuOpen);\n      });\n    }\n  }\n\n  /**\n   * Inicializa smooth scroll para links internos\n   */\n  function initSmoothScroll() {\n    const internalLinks = document.querySelectorAll(CONFIG.SELECTORS.internalLinks);\n    \n    internalLinks.forEach(link => {\n      link.addEventListener('click', function(e) {\n        e.preventDefault();\n        const target = this.getAttribute('href');\n        \n        if (window.BRMotoSport?.smoothScroll) {\n          window.BRMotoSport.smoothScroll(target);\n        }\n      });\n    });\n  }\n\n  /**\n   * Inicialização principal\n   */\n  function init() {\n    // Adicionar classe loaded ao body\n    document.body.classList.add(CONFIG.CLASSES.loaded);\n    \n    // Inicializar funcionalidades\n    initLazyLoad();\n    initMobileMenu();\n    initSmoothScroll();\n    \n    // Inicializar Swiper se disponível\n    initSwiperMarcas();\n  }\n\n  /**\n   * Inicializa Swiper das marcas (se disponível)\n   */\n  function initSwiperMarcas() {\n    if (typeof Swiper !== 'undefined') {\n      const swiperMarcas = document.querySelector(\".swiper.swiper-marcas\");\n      \n      if (swiperMarcas) {\n        new Swiper(\".swiper.swiper-marcas\", {\n          slidesPerView: 1.5,\n          spaceBetween: 0,\n        });\n      }\n    }\n  }\n\n  // Inicialização\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", init);\n  } else {\n    setTimeout(init, 100);\n  }\n})();\n","/**\n * BR Moto Sport - Dropdown Desktop\n * Funciona apenas em desktop (>1024px)\n * Arquivo: src/js/dropdown-desktop.js\n */\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  // Função unificada para dropdown - APENAS DESKTOP\n  function initDropdownMenu() {\n    // Executa apenas em desktop (>1024px)\n    if (window.innerWidth <= 1024) return;\n\n    const dropdownBtn = document.querySelector('.btn-dropdown');\n    const dropdownMenu = document.querySelector('.dropdown-menu');\n    const header = document.querySelector('.header-main');\n    \n    if (dropdownBtn && dropdownMenu) {\n      // Função para fechar dropdown\n      function closeDropdown() {\n        dropdownMenu.classList.remove('active');\n        dropdownBtn.classList.remove('active');\n        if (header) {\n          header.classList.remove('dropdown-open');\n        }\n      }\n      \n      // Função para abrir dropdown\n      function openDropdown() {\n        dropdownMenu.classList.add('active');\n        dropdownBtn.classList.add('active');\n        if (header) {\n          header.classList.add('dropdown-open');\n        }\n      }\n      \n      // Click no botão - APENAS DESKTOP\n      dropdownBtn.addEventListener('click', function(e) {\n        // Verifica novamente se é desktop\n        if (window.innerWidth <= 1024) return;\n        \n        e.preventDefault();\n        e.stopPropagation();\n        \n        // Toggle das classes\n        if (dropdownMenu.classList.contains('active')) {\n          closeDropdown();\n        } else {\n          openDropdown();\n        }\n      });\n      \n      // Mouse leave no dropdown (fechar quando sair da área) - APENAS DESKTOP\n      dropdownMenu.addEventListener('mouseleave', function() {\n        if (window.innerWidth <= 1024) return;\n        closeDropdown();\n      });\n      \n      // Mouse leave no botão (fechar quando sair do botão) - APENAS DESKTOP\n      dropdownBtn.addEventListener('mouseleave', function() {\n        if (window.innerWidth <= 1024) return;\n        \n        // Pequeno delay para evitar fechamento acidental\n        setTimeout(() => {\n          // Verificar se o mouse não está sobre o dropdown\n          if (!dropdownMenu.matches(':hover')) {\n            closeDropdown();\n          }\n        }, 100);\n      });\n      \n      // Fechar ao clicar fora - APENAS DESKTOP\n      document.addEventListener('click', function(e) {\n        if (window.innerWidth <= 1024) return;\n        \n        if (!e.target.closest('.btn-dropdown') && \n            !e.target.closest('.dropdown-menu')) {\n          closeDropdown();\n        }\n      });\n    }\n  }\n  \n  // Inicializar dropdown desktop\n  initDropdownMenu();\n  \n  // Reinicializar no resize\n  window.addEventListener('resize', function() {\n    // Delay para evitar execução excessiva\n    clearTimeout(window.dropdownResizeTimeout);\n    window.dropdownResizeTimeout = setTimeout(initDropdownMenu, 100);\n  });\n});\n","/**\n * BR Moto Sport - Solução Dropdown Marcas\n * Baseado no código funcional do projeto uroman\n * Arquivo: src/js/dropdown-mobile.js\n */\n\n(() => {\n  const marcaConfig = {\n    triggerClass: \".btn-dropdown\",\n    submenuId: \"mega-menu\",\n    name: \"Marcas\",\n  };\n\n  // Configuração do header mobile\n  const headerConfig = {\n    headerSelector: \".header-main\",\n    menuToggleSelector: \".menu-hamburger\",\n    activeClass: \"w--open\",\n    headerActiveClass: \"mobile-menu-active\"\n  };\n\n  /**\n   * Configura o monitoramento do header mobile\n   */\n  function setupMobileHeader() {\n    const header = document.querySelector(headerConfig.headerSelector);\n    const menuToggle = document.querySelector(headerConfig.menuToggleSelector);\n\n    if (!header || !menuToggle) {\n      console.log('Elementos do header mobile não encontrados');\n      return;\n    }\n\n    // Observer para detectar mudanças na classe do menu toggle\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'class') {\n          const isMenuOpen = menuToggle.classList.contains(headerConfig.activeClass);\n          \n          if (isMenuOpen) {\n            header.classList.add(headerConfig.headerActiveClass);\n            console.log('Menu mobile ativo - classe adicionada ao header');\n          } else {\n            header.classList.remove(headerConfig.headerActiveClass);\n            console.log('Menu mobile fechado - classe removida do header');\n          }\n        }\n      });\n    });\n\n    // Inicia a observação\n    observer.observe(menuToggle, {\n      attributes: true,\n      attributeFilter: ['class']\n    });\n\n    // Verifica estado inicial\n    const isInitiallyOpen = menuToggle.classList.contains(headerConfig.activeClass);\n    if (isInitiallyOpen) {\n      header.classList.add(headerConfig.headerActiveClass);\n    }\n\n    console.log('Monitoramento do header mobile configurado!');\n  }\n\n  /**\n   * Configura o dropdown de marcas\n   */\n  function setupMarcaDropdown() {\n    // Executa apenas em tablet e mobile (até 1024px)\n    if (window.innerWidth > 1024) return;\n\n    const triggerLi = document.querySelector(\n      `li:has(${marcaConfig.triggerClass})`\n    );\n    const submenu = document.querySelector(\n      `#${marcaConfig.submenuId} .dropdown-menu-list`\n    );\n\n    if (!triggerLi || !submenu) {\n      console.log(\"Elementos do dropdown não encontrados\");\n      return;\n    }\n\n    // Move submenu para dentro do item de menu\n    triggerLi.appendChild(submenu);\n    addSubmenuEvents(submenu);\n\n    // Remove listeners antigos\n    triggerLi.removeEventListener(\"click\", handleMarcaClick);\n\n    // Adiciona novo handler\n    triggerLi.addEventListener(\"click\", (e) => {\n      if (!e.target.closest(\".dropdown-menu-list a\")) {\n        e.preventDefault();\n        e.stopPropagation();\n        handleMarcaClick(e);\n      }\n    });\n\n    // Previne fechamento em cliques nos links\n    const submenuLinks = submenu.querySelectorAll(\"a\");\n    submenuLinks.forEach((link) => {\n      link.addEventListener(\"click\", (e) => e.stopPropagation());\n    });\n\n    console.log(\"Dropdown Marcas configurado com sucesso!\");\n  }\n\n  /**\n   * Adiciona eventos específicos do submenu\n   */\n  function addSubmenuEvents(submenu) {\n    const listLinks = submenu.querySelectorAll(\".dropdown-item-marca\");\n    listLinks.forEach((link) => {\n      link.addEventListener(\"click\", (e) => e.stopPropagation());\n    });\n\n    if (submenu) {\n      submenu.addEventListener(\"click\", (e) => e.stopPropagation());\n    }\n  }\n\n  /**\n   * Gerencia clique no dropdown de marcas\n   */\n  function handleMarcaClick(e) {\n    // Executa apenas em tablet e mobile\n    if (window.innerWidth > 1024) return;\n\n    const submenu = document.querySelector(\n      `li:has(${marcaConfig.triggerClass}) .dropdown-menu-list`\n    );\n\n    if (!submenu) return;\n\n    const triggerLi = e.currentTarget;\n    const isActive = submenu.classList.contains(\"active\");\n\n    if (isActive) {\n      closeMarcaDropdown();\n      triggerLi.classList.remove(\"active\");\n    } else {\n      openMarcaDropdown();\n      triggerLi.classList.add(\"active\");\n    }\n  }\n\n  /**\n   * Abre o dropdown de marcas\n   */\n  function openMarcaDropdown() {\n    const submenu = document.querySelector(\n      `li:has(${marcaConfig.triggerClass}) .dropdown-menu-list`\n    );\n\n    if (submenu) {\n      // Aplica estilos inline para mostrar o dropdown\n      submenu.style.cssText = `\n        \n      `;\n\n      // Aplica estilos aos itens\n      const dropdownItems = submenu.querySelectorAll(\".dropdown-item-marca\");\n      dropdownItems.forEach((item) => {\n        item.style.cssText = `\n        `;\n      });\n\n      submenu.setAttribute(\"aria-hidden\", \"false\");\n      submenu.classList.add(\"active\");\n    }\n  }\n\n  /**\n   * Fecha o dropdown de marcas\n   */\n  function closeMarcaDropdown() {\n    const submenu = document.querySelector(\n      `li:has(${marcaConfig.triggerClass}) .dropdown-menu-list`\n    );\n\n    if (submenu) {\n      submenu.style.cssText = `\n        display: none !important;\n        visibility: hidden !important;\n        opacity: 0 !important;\n        pointer-events: none !important;\n      `;\n\n      submenu.classList.remove(\"active\");\n      submenu.setAttribute(\"aria-hidden\", \"true\");\n    }\n  }\n\n  // Inicialização\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      setupMobileHeader();\n      setupMarcaDropdown();\n    });\n  } else {\n    setTimeout(() => {\n      setupMobileHeader();\n      setupMarcaDropdown();\n    }, 100);\n  }\n\n  // Reinicializa no resize\n  window.addEventListener(\"resize\", () => {\n    setTimeout(() => {\n      setupMobileHeader();\n      setupMarcaDropdown();\n    }, 100);\n  });\n\n  // Fecha ao clicar fora\n  document.addEventListener(\"click\", (e) => {\n    // Executa apenas em tablet e mobile\n    if (window.innerWidth > 1024) return;\n\n    if (!e.target.closest(`li:has(${marcaConfig.triggerClass})`)) {\n      closeMarcaDropdown();\n    }\n  });\n\n  // Funções globais para compatibilidade\n  window.openMarcaDropdown = openMarcaDropdown;\n  window.closeMarcaDropdown = closeMarcaDropdown;\n})();\n"]}